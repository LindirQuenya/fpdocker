# Build our patched version of wine.
# This takes FOREVER, don't do it unless you have 1-2 hours.
wine-builder:
    FROM debian:bullseye
    LABEL stage=builder
    # Environment vairable ensures that apt doesn't prompt us for anything.
    ENV DEBIAN_FRONTEND=noninteractive
    
    # Install wget and gpg so that we can add an apt key.
    RUN apt-get update
    RUN apt-get install --yes wget gnupg
    
    # Add the Wine repo and key, for more recent libvkd3d-dev
    RUN dpkg --add-architecture i386 
    RUN wget -qO- https://dl.winehq.org/wine-builds/winehq.key | apt-key add -
    RUN echo deb https://dl.winehq.org/wine-builds/debian/ bullseye main >> /etc/apt/sources.list.d/wine.list
    RUN echo deb-src https://dl.winehq.org/wine-builds/debian/ bullseye main >> /etc/apt/sources.list.d/wine.list
    
    # Re-update the sources, and install dependencies.
    RUN apt-get update
    # Build-dep was installing extra stuff, so we're just manually specifying this now.
    RUN apt-get install --yes git gcc-mingw-w64 libasound2-dev libpulse-dev libdbus-1-dev libfontconfig-dev libgnutls28-dev libjpeg62-turbo-dev libpng-dev libtiff-dev libgl-dev libunwind-dev libx11-dev libxml2-dev libxslt1-dev libfaudio-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libmpg123-dev libosmesa6-dev libsdl2-dev libudev-dev libvkd3d-dev libvulkan-dev libusb-1.0-0-dev libgsm1-dev liblcms2-dev bison flex autoconf make build-essential libxcomposite-dev libjxr-dev libxpresent-dev checkinstall
    
    # Note that for both of these, I'm using --depth 1, which disables fetching history.
    # This is intentional, as it significantly reduces the clone times, and we don't need history anyway.
    # Grab the wine sources for v6.19.
    RUN git clone --depth 1 --branch wine-6.19 git://source.winehq.org/git/wine.git /usr/src/wine-source
    # Also get wine-staging v6.19
    RUN git clone --depth 1 --branch v6.19 git://github.com/wine-staging/wine-staging.git /usr/src/wine-staging
    
    # Apply the staging patches.
    WORKDIR /usr/src/wine-staging/patches
    RUN ./patchinstall.sh DESTDIR=/usr/src/wine-source --all
    
    # Copy our custom patch over.
    COPY childwindow-6.19-staging.patch /usr/src/childwindow.patch
    
    # Apply the patch.
    WORKDIR /usr/src/wine-source
    RUN git apply /usr/src/childwindow.patch
    
    # Configure and build the 64-bit wine.
    WORKDIR /usr/src/wine64
    RUN /usr/src/wine-source/configure --enable-win64 --prefix=/opt/wine-staging
    RUN make -j4
    # Package it, with dependencies, recommends, etc.
    RUN checkinstall -D --install=no --nodoc -y --pkgname=wine-staging-amd64-local --pkglicense=LGPLv2.1 --pkgversion=6.19 --arch=amd64 --pkgsource="https://source.winehq.org/git/wine.git" --requires="libasound2 \(\>= 1.0.16\),libc6 \(\>= 2.29\),libfaudio0 \(\>= 19.06.07\),libgcc-s1 \(\>= 3.0\),libglib2.0-0 \(\>= 2.12.0\),libgphoto2-6 \(\>= 2.5.10\),libgphoto2-port12 \(\>= 2.5.10\),libgstreamer-plugins-base1.0-0 \(\>= 1.0.0\),libgstreamer1.0-0 \(\>= 1.4.0\),liblcms2-2 \(\>= 2.2+git20110628\),libldap-2.4-2 \(\>= 2.4.7\),libmpg123-0 \(\>= 1.6.2\),libopenal1 \(\>= 1.14\),libpcap0.8 \(\>= 1.5.1\),libpulse0 \(\>= 0.99.1\),libudev1 \(\>= 183\),libusb-1.0-0 \(\>= 2:1.0.21\),libvkd3d1 \(\>= 1.2~focal-1\),libx11-6,libxext6,libxml2 \(\>= 2.9.0\),ocl-icd-libopencl1 \| libopencl1,ocl-icd-libopencl1 \(\>= 1.0\) \| libopencl-1.1-1,ocl-icd-libopencl1 \(\>= 1.0\) \| libopencl-1.2-1,libasound2-plugins,libncurses6 \| libncurses5 \| libncurses" --recommends="libcairo2,libcap2-bin,libcapi20-3,libcups2,libdbus-1-3,libfontconfig1,libfreetype6,libglu1-mesa \| libglu1,libgnutls30 \| libgnutls-deb0-28 \| libgnutls26,libgsm1,libgssapi-krb5-2,libgtk-3-0,libjpeg8 \| libjpeg62-turbo,libkrb5-3,libodbc1,libosmesa6,libpng16-16 \| libpng12-0,libsane \| libsane1,libsdl2-2.0-0,libtiff5,libv4l-0,libva-drm2 \| libva-drm1,libva-x11-2 \| libva-x11-1,libva2 \| libva1,libxcomposite1,libxcursor1,libxfixes3,libxi6,libxinerama1,libxrandr2,libxrender1,libxslt1.1,libxxf86vm1"

    # Install 32-bit dependencies.
    RUN apt-get install --yes libasound2-dev:i386 libpulse-dev:i386 libdbus-1-dev:i386 libfontconfig-dev:i386 libgnutls28-dev:i386 libjpeg62-turbo-dev:i386 libpng-dev:i386 libtiff-dev:i386 libgl-dev:i386 libunwind-dev:i386 libx11-dev:i386 libxml2-dev:i386 libxslt1-dev:i386 libfaudio-dev:i386 libgstreamer-plugins-base1.0-dev:i386 libgstreamer1.0-dev:i386 libmpg123-dev:i386 libosmesa6-dev:i386 libsdl2-dev:i386 libudev-dev:i386 libvkd3d-dev:i386 libvulkan-dev:i386 libusb-1.0-0-dev:i386 libgsm1-dev:i386 liblcms2-dev:i386 libxcomposite-dev:i386 libjxr-dev:i386 gcc-multilib pkg-config:i386 libxpresent-dev:i386
    # Build WoW64 (32-bit) wine.
    WORKDIR /usr/src/wine32
    RUN PKG_CONFIG_PATH=/usr/lib/pkgconfig /usr/src/wine-source/configure --with-wine64=/usr/src/wine64 --prefix=/opt/wine-staging
    RUN make -j4
    # Package it, with dependencies, recommends, etc.
    RUN checkinstall -D --install=no --nodoc -y --pkgname=wine-staging-i386-local --pkglicense=LGPLv2.1 --pkgversion=6.19 --arch=i386 --pkgsource="https://source.winehq.org/git/wine.git" --requires "libasound2 \(\>= 1.0.16\),libc6 \(\>= 2.29\),libfaudio0 \(\>= 19.06.07\),libglib2.0-0 \(\>= 2.12.0\),libgphoto2-6 \(\>= 2.5.10\),libgphoto2-port12 \(\>= 2.5.10\),libgstreamer-plugins-base1.0-0 \(\>= 1.0.0\),libgstreamer1.0-0 \(\>= 1.4.0\),liblcms2-2 \(\>= 2.2+git20110628\),libldap-2.4-2 \(\>= 2.4.7\),libmpg123-0 \(\>= 1.13.7\),libopenal1 \(\>= 1.14\),libpcap0.8 \(\>= 1.5.1\),libpulse0 \(\>= 0.99.1\),libudev1 \(\>= 183\),libusb-1.0-0 \(\>= 2:1.0.21\),libvkd3d1 \(\>= 1.2~focal-1\),libx11-6,libxext6,libxml2 \(\>= 2.9.0\),ocl-icd-libopencl1 \| libopencl1,ocl-icd-libopencl1 \(\>= 1.0\) \| libopencl-1.1-1,ocl-icd-libopencl1 \(\>= 1.0\) \| libopencl-1.2-1,libasound2-plugins,libncurses6 \| libncurses5 \| libncurses" --recommends="libcairo2,libcap2-bin,libcapi20-3,libcups2,libdbus-1-3,libfontconfig1,libfreetype6,libglu1-mesa \| libglu1,libgnutls30 \| libgnutls-deb0-28 \| libgnutls26,libgsm1,libgssapi-krb5-2,libgtk-3-0,libjpeg8 \| libjpeg62-turbo,libkrb5-3,libodbc1,libosmesa6,libpng16-16 \| libpng12-0,libsane \| libsane1,libsdl2-2.0-0,libtiff5,libv4l-0,libva-drm2 \| libva-drm1,libva-x11-2 \| libva-x11-1,libva2 \| libva1,libxcomposite1,libxcursor1,libxfixes3,libxi6,libxinerama1,libxrandr2,libxrender1,libxslt1.1,libxxf86vm1" --provides="wine-staging"
    
    # Save the debs as local artifacts.
    SAVE ARTIFACT /usr/src/wine64/wine-staging-amd64-local_6.19-1_amd64.deb AS LOCAL built/wine-staging-amd64-local_6.19-1_amd64.deb
    SAVE ARTIFACT /usr/src/wine32/wine-staging-i386-local_6.19-1_i386.deb AS LOCAL built/wine-staging-i386-local_6.19-1_i386.deb
    
    # Maybe:
    # apt-get source wine-staging=6.19
    # apt-get source wine-staging-i386:i386=6.19
    # git apply <patch>
    # dpkg-source --commit
    # debuild -d
    # Actually, dpkg-buildsomething, see here: https://unix.stackexchange.com/a/204177
    # That is, dpkg-buildpackage -us -uc -b -d
    # And:     dpkg-buildpackage -us -uc -b -d --host-arch i386
    # Or maybe: debuild -us -uc -d -b -ai386
    # The current method works fine for now, but this is something to consider if it breaks.
