ARG CURRVERSION="20.04.1-0.5"


# Build the base image. Feature: hardware acceleration.
# This should be called "base", but that is a reserved name in Earthly.
hwaccel:
    FROM ubuntu:latest
    
    # Environment vairable ensures that apt doesn't prompt us for anything.
    ENV DEBIAN_FRONTEND=noninteractive
    # Update apt, and install the required tools and graphical libraries.
    RUN apt-get update
    RUN apt-get install --yes libgl1-mesa-glx libgl1-mesa-dri libgtk-3-0 libasound2 libdbus-glib-1-2 libxt6 pulseaudio-utils libpulse0 xz-utils wget gnupg
    
    # Copy a config file to make audio work.
    COPY config/pulse-client.conf /etc/pulse/client.conf


# Save intermediary image, generally for dev.
base-save:
    FROM +hwaccel
    SAVE IMAGE fpdocker-base:latest
    SAVE IMAGE fpdocker-base:$CURRVERSION

# Build the basilisk image. Feature: Basilisk-browser with autoconfig.
basilisk:
    FROM +hwaccel
    
    # Install the latest basilisk. The binary will be located at /basilisk/basilisk
    RUN wget -qO- https://us.basilisk-browser.org/release/basilisk-latest.linux64.tar.xz | tar xJ
    
    # These two files configure basilisk.
    COPY config/autoconfig.js /basilisk/defaults/pref/autoconfig.js
    COPY config/flashpoint.cfg /basilisk/flashpoint.cfg
    
    # Setup plugins. None installed yet, but we'll get there.
    RUN mkdir /basilisk-plugins
    ENV MOZ_PLUGIN_PATH=/basilisk-plugins


# Save intermediary image, generally for dev.
basilisk-save:
    FROM +basilisk
    SAVE IMAGE fpdocker-basilisk:latest
    SAVE IMAGE fpdocker-basilisk:$CURRVERSION

# Build the wine image. Feature: WINE compatibility layer.
wine:
    FROM +basilisk
    
    # Add i386 support to apt.
    RUN dpkg --add-architecture i386 
    # Install Wine's repo
    RUN wget -qO- https://dl.winehq.org/wine-builds/winehq.key | apt-key add -
    RUN echo 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main' > /etc/apt/sources.list.d/wine.list
    # Update the package lists, and install wine.
    RUN apt-get update
    RUN apt-get install --yes winehq-staging


# Save intermediary image, generally for dev.
wine-save:
    FROM +wine
    SAVE IMAGE fpdocker-wine:latest
    SAVE IMAGE fpdocker-wine:$CURRVERSION


# This builds pipelight from source against modern libraries.
pipelight-builder:
    FROM ubuntu:latest
    # Install the tools required to setup the build environment.
    RUN apt-get update
    RUN DEBIAN_FRONTEND=noninteractive apt-get install --yes wget dpkg-dev devscripts equivs checkinstall
    # Fetch the sources.
    RUN wget http://ppa.launchpad.net/pipelight/stable/ubuntu/pool/main/p/pipelight-multi/pipelight-multi_0.2.8.2~ubuntu16.04.1.dsc
    RUN wget http://ppa.launchpad.net/pipelight/stable/ubuntu/pool/main/p/pipelight-multi/pipelight-multi_0.2.8.2~ubuntu16.04.1.tar.xz
    # Extract the sources, and cd there.
    RUN dpkg-source -x pipelight-multi_0.2.8.2~ubuntu16.04.1.dsc
    WORKDIR /pipelight-multi-0.2.8.2~ubuntu16.04.1
    # Install the build-time dependencies.
    RUN mk-build-deps -B
    RUN DEBIAN_FRONTEND=noninteractive apt-get install --yes ./pipelight-multi-build-deps-depends_0.2.8.2~ubuntu16.04.1_all.deb
    # Configure with win64 support and make.
    RUN ./configure --wine-path=/opt/wine-staging/bin/wine --with-win64 --win64-cxx=x86_64-w64-mingw32-g++ --win64-flags="-static-libgcc -static-libstdc++ -static" --wine64-path=/opt/wine-staging/bin/wine64
    RUN make
    # Package as deb.
    RUN checkinstall -D --install=no --nodoc -y --pkgname=pipelight-multi --pkglicense=GPL2 --pkgversion=0.2.8.2 --pkgsource="http://ppa.launchpad.net/pipelight/stable/ubuntu/pool/main/p/pipelight-multi/" --requires="libc6 \(\>= 2.14\),libgcc1 \(\>= 1:3.0\),libstdc++6 \(\>= 5.2\),libx11-6,debconf \(\>= 0.5\) \| debconf-2.0,mesa-utils,ttf-mscorefonts-installer,wget,zenity \| kde-baseapps-bin,zenity \| qdbus,wine-staging,bash \(\>= 4.0\),unzip,cabextract,gnupg" --arch=amd64
    # Save the resulting deb.
    SAVE ARTIFACT /pipelight-multi-0.2.8.2~ubuntu16.04.1/pipelight-multi_0.2.8.2-1_amd64.deb


# Build the pipelight image. Feature: Pipelight installs windows-only browser plugins in WINE.
pipelight:
    FROM +wine
    # Just in case the workdir didn't reset.
    WORKDIR /
    # Copy the deb from the builder, and install it.
    COPY +pipelight-builder/pipelight-multi_0.2.8.2-1_amd64.deb /
    RUN apt-get install --yes /pipelight-multi_0.2.8.2-1_amd64.deb
    # We don't need the deb anymore, delete it.
    RUN rm /pipelight-multi_0.2.8.2-1_amd64.deb
    # Make the plugins for Basilisk.
    RUN mkdir -p /usr/lib/mozilla/plugins
    RUN pipelight-plugin --create-mozilla-plugins
    # Cleanup unneeded packages.
    RUN apt-get autoremove --yes


# Save intermediary image, generally for dev.
pipelight-save:
    FROM +pipelight
    SAVE IMAGE fpdocker-pipelight:latest
    SAVE IMAGE fpdocker-pipelight:$CURRVERSION

